# https://www.nginx.com/blog/introducing-technology-preview-nginx-support-for-quic-http-3/
server {
    # quic and http/3
    # listen 443 http3 reuseport;

    # http/2 and http/1.1
    listen 443 ssl http2;

    server_name localhost;

    # openssl-generated pair for local development
    # https://letsencrypt.org/docs/certificates-for-localhost/
    ssl_certificate     /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;

    # Enable all TLS versions (TLSv1.3 is required for QUIC).
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers [TLS13+AESGCM+AES128|TLS13+AESGCM+AES256|TLS13+CHACHA20]:[EECDH+ECDSA+AESGCM+AES128|EECDH+ECDSA+CHACHA20]:EECDH+ECDSA+AESGCM+AES256:EECDH+ECDSA+AES128+SHA:EECDH+ECDSA+AES256+SHA:[EECDH+aRSA+AESGCM+AES128|EECDH+aRSA+CHACHA20]:EECDH+aRSA+AESGCM+AES256:EECDH+aRSA+AES128+SHA:EECDH+aRSA+AES256+SHA:RSA+AES128+SHA:RSA+AES256+SHA:RSA+3DES;

    # 0-RTT QUIC connection resumption
    # ssl_early_data on;

    # Add Alt-Svc header to negotiate HTTP/3.
    # add_header alt-svc 'h3-27=":8889"; ma=86400, h3-28=":8889"; ma=86400, h3-29=":8889"; ma=86400';
    # add_header QUIC-Status $http3;     # Sent when QUIC was used

    location / {
        root   /static;

        gzip_static on;
        brotli_static on;

        expires 1d;
    }
}
